local Players        = game:GetService("Players")
local RunService     = game:GetService("RunService")
local Workspace      = game:GetService("Workspace")
local TweenService   = game:GetService("TweenService")
local UserInput      = game:GetService("UserInputService")

local player = Players.LocalPlayer

-- CONFIG
local PET_DISTANCE    = 8       -- radius around honeysuckle
local UPDATE_INTERVAL = 0.1     -- seconds per move
local TELEPORT        = true    -- use SetPrimaryPartCFrame

-- MENU / GUI
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "PetPlantManager"
screenGui.ResetOnSpawn = false

-- Minimized icon
local icon = Instance.new("ImageButton", screenGui)
icon.Name  = "MinIcon"
icon.Size  = UDim2.new(0,30,0,30)
icon.Position = UDim2.new(0,10,0.5,-15)
icon.Image = "rbxassetid://3926305904" -- simple gear or paw icon
icon.Visible = false

-- Main window
local win = Instance.new("Frame", screenGui)
win.Size   = UDim2.new(0,300,0,400)
win.Position = UDim2.new(0,20,0.5,-200)
win.BackgroundColor3 = Color3.fromRGB(45,45,45)
win.Active = true; win.Draggable = true

local layout = Instance.new("UIListLayout", win)
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding   = UDim.new(0,5)

-- Header
local header = Instance.new("Frame", win)
header.Size  = UDim2.new(1,0,0,30)
header.BackgroundColor3 = Color3.fromRGB(25,25,25)
local title = Instance.new("TextLabel", header)
title.Size = UDim2.new(1,-30,1,0)
title.Position = UDim2.new(0,5,0,0)
title.Text = "Pet Plant Manager"
title.TextColor3 = Color3.new(1,1,1)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold; title.TextSize = 18
local btnMin = Instance.new("TextButton", header)
btnMin.Size = UDim2.new(0,25,0,25)
btnMin.Position = UDim2.new(1,-30,0,2)
btnMin.Text = "—"
btnMin.Font = Enum.Font.Gotham; btnMin.TextSize = 18
btnMin.BackgroundColor3 = Color3.fromRGB(70,70,70)
btnMin.TextColor3 = Color3.new(1,1,1)

btnMin.MouseButton1Click:Connect(function()
    win.Visible = false
    icon.Visible = true
end)
icon.MouseButton1Click:Connect(function()
    win.Visible = true
    icon.Visible = false
end)

-- Scan & Toggle
local btnScan = Instance.new("TextButton", win)
btnScan.Size = UDim2.new(1,0,0,40)
btnScan.Text = "🔍 Scan Workspace"
btnScan.Font = Enum.Font.GothamBold; btnScan.TextSize = 18
btnScan.BackgroundColor3 = Color3.fromRGB(34,139,34)
btnScan.TextColor3 = Color3.new(1,1,1)

local btnToggle = Instance.new("TextButton", win)
btnToggle.Size = UDim2.new(1,0,0,40)
btnToggle.Text = "▶️ Start Sticking"
btnToggle.Font = Enum.Font.GothamBold; btnToggle.TextSize = 18
btnToggle.BackgroundColor3 = Color3.fromRGB(220,53,69)
btnToggle.TextColor3 = Color3.new(1,1,1)

local infoLabel = Instance.new("TextLabel", win)
infoLabel.Size = UDim2.new(1,0,0,60)
infoLabel.TextWrapped = true
infoLabel.TextYAlignment = Enum.TextYAlignment.Top
infoLabel.Text = "Status: Idle"
infoLabel.Font = Enum.Font.Gotham; infoLabel.TextSize = 16
infoLabel.BackgroundColor3 = Color3.fromRGB(60,60,60)
infoLabel.TextColor3 = Color3.new(1,1,1)

-- DATA
local honeysucklePos = nil
local pets = {}      -- { model = Model, root = BasePart }
local sticking = false
local timeAcc = 0

-- Helpers
local function findHoneysuckle()
    local farm = Workspace:FindFirstChild("Farm")
    if not farm then return false end
    farm = farm:FindFirstChild("Farm")
    farm = farm and farm:FindFirstChild("Important")
    farm = farm and farm:FindFirstChild("Plants_Physical")
    local hs  = farm and farm:FindFirstChild("Honeysuckle")
    if not hs then return false end
    honeysucklePos = hs:GetPivot().Position
    return true
end

local function findPets()
    pets = {}
    local pp = Workspace:FindFirstChild("PetsPhysical")
    if not pp then return 0 end
    for _, mdl in ipairs(pp:GetChildren()) do
        if mdl:IsA("Model") then
            local root = mdl.PrimaryPart
                     or mdl:FindFirstChild("RootPart_PetMover_WELD", true)
                     or mdl:FindFirstChildWhichIsA("BasePart")
            if root then
                mdl.PrimaryPart = root
                table.insert(pets, {model=mdl, root=root})
            end
        end
    end
    return #pets
end

local function updateInfo()
    infoLabel.Text = string.format(
        "Honeysuckle: %s\nPets Found: %d\nSticking: %s",
        honeysucklePos and "✓" or "✗",
        #pets,
        sticking and "ON" or "OFF"
    )
end

-- Pet movement
local function movePets()
    if not honeysucklePos or #pets==0 then return end
    for i, pd in ipairs(pets) do
        local angle = (i-1)*(2*math.pi/#pets)
        local target = Vector3.new(
            honeysucklePos.X + math.cos(angle)*PET_DISTANCE,
            honeysucklePos.Y + 2,
            honeysucklePos.Z + math.sin(angle)*PET_DISTANCE
        )
        if TELEPORT then
            pd.model:SetPrimaryPartCFrame(CFrame.new(target))
        else
            -- optional: smooth via BodyPosition
            local bp = pd.root:FindFirstChild("__BPMove")
                     or Instance.new("BodyPosition", pd.root)
            bp.Name = "__BPMove"
            bp.MaxForce = Vector3.new(1e5,1e5,1e5)
            bp.P = 3000; bp.D = 500
            bp.Position = target
            game:GetService("Debris"):AddItem(bp, UPDATE_INTERVAL*2)
        end
    end
end

-- Button callbacks
btnScan.MouseButton1Click:Connect(function()
    local foundHS = findHoneysuckle()
    local count   = findPets()
    updateInfo()
end)

btnToggle.MouseButton1Click:Connect(function()
    if not honeysucklePos or #pets==0 then
        infoLabel.Text = "Scan first!"
        return
    end
    sticking = not sticking
    btnToggle.Text = sticking and "⏹️ Stop Sticking" or "▶️ Start Sticking"
    btnToggle.BackgroundColor3 = sticking
        and Color3.fromRGB(34,139,34)
        or Color3.fromRGB(220,53,69)
    updateInfo()
end)

-- Keyboard H to toggle menu
UserInput.InputBegan:Connect(function(inp, gp)
    if gp then return end
    if inp.KeyCode==Enum.KeyCode.H then
        win.Visible = not win.Visible
        icon.Visible = not icon.Visible
    end
end)

-- Heartbeat loop
RunService.Heartbeat:Connect(function(dt)
    if sticking then
        timeAcc = timeAcc + dt
        if timeAcc >= UPDATE_INTERVAL then
            timeAcc = 0
            movePets()
        end
    end
end)

-- auto-scan on load
findHoneysuckle()
findPets()
updateInfo()
