-- Pet Plant Manager GUI System for Roblox
-- Place this in StarterGui or StarterPlayerScripts

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Configuration
local PET_DISTANCE = 8 -- How close pets stay to assigned plants
local UPDATE_INTERVAL = 0.5
local ANIMATION_TIME = 0.3

-- Data storage
local plantAssignments = {} -- [plant] = {pets = {}, position = Vector3}
local allPlants = {}
local allPets = {}
local lastUpdate = 0

-- GUI Creation
local function createMainGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PetPlantManager"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui

    -- Minimized Icon
    local iconFrame = Instance.new("ImageButton")
    iconFrame.Name = "MinimizedIcon"
    iconFrame.Size = UDim2.new(0, 60, 0, 60)
    iconFrame.Position = UDim2.new(0, 20, 0.5, -30)
    iconFrame.BackgroundColor3 = Color3.fromRGB(34, 139, 34)
    iconFrame.BorderSizePixel = 0
    iconFrame.Visible = false
    iconFrame.Parent = screenGui

    local iconCorner = Instance.new("UICorner")
    iconCorner.CornerRadius = UDim.new(0, 30)
    iconCorner.Parent = iconFrame

    local iconLabel = Instance.new("TextLabel")
    iconLabel.Size = UDim2.new(1, 0, 1, 0)
    iconLabel.BackgroundTransparency = 1
    iconLabel.Text = "ðŸŒ±"
    iconLabel.TextColor3 = Color3.new(1, 1, 1)
    iconLabel.TextScaled = true
    iconLabel.Font = Enum.Font.SourceSansBold
    iconLabel.Parent = iconFrame

    -- Main Menu Frame
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainMenu"
    mainFrame.Size = UDim2.new(0, 400, 0, 500)
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -250)
    mainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Parent = screenGui

    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 12)
    mainCorner.Parent = mainFrame

    -- Title Bar
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = Color3.fromRGB(34, 139, 34)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame

    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 12)
    titleCorner.Parent = titleBar

    local titleFix = Instance.new("Frame")
    titleFix.Size = UDim2.new(1, 0, 0, 12)
    titleFix.Position = UDim2.new(0, 0, 1, -12)
    titleFix.BackgroundColor3 = Color3.fromRGB(34, 139, 34)
    titleFix.BorderSizePixel = 0
    titleFix.Parent = titleBar

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -80, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "Pet Plant Manager"
    titleLabel.TextColor3 = Color3.new(1, 1, 1)
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleBar

    -- Minimize Button
    local minimizeBtn = Instance.new("TextButton")
    minimizeBtn.Name = "MinimizeButton"
    minimizeBtn.Size = UDim2.new(0, 30, 0, 30)
    minimizeBtn.Position = UDim2.new(1, -40, 0, 5)
    minimizeBtn.BackgroundColor3 = Color3.fromRGB(255, 193, 7)
    minimizeBtn.BorderSizePixel = 0
    minimizeBtn.Text = "â€”"
    minimizeBtn.TextColor3 = Color3.new(0, 0, 0)
    minimizeBtn.TextScaled = true
    minimizeBtn.Font = Enum.Font.SourceSansBold
    minimizeBtn.Parent = titleBar

    local minCorner = Instance.new("UICorner")
    minCorner.CornerRadius = UDim.new(0, 15)
    minCorner.Parent = minimizeBtn

    -- Content Area
    local contentFrame = Instance.new("ScrollingFrame")
    contentFrame.Name = "Content"
    contentFrame.Size = UDim2.new(1, -20, 1, -60)
    contentFrame.Position = UDim2.new(0, 10, 0, 50)
    contentFrame.BackgroundTransparency = 1
    contentFrame.ScrollBarThickness = 8
    contentFrame.ScrollBarImageColor3 = Color3.fromRGB(34, 139, 34)
    contentFrame.Parent = mainFrame

    local contentLayout = Instance.new("UIListLayout")
    contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    contentLayout.Padding = UDim.new(0, 10)
    contentLayout.Parent = contentFrame

    -- Refresh Button
    local refreshBtn = Instance.new("TextButton")
    refreshBtn.Name = "RefreshButton"
    refreshBtn.Size = UDim2.new(1, 0, 0, 35)
    refreshBtn.BackgroundColor3 = Color3.fromRGB(34, 139, 34)
    refreshBtn.BorderSizePixel = 0
    refreshBtn.Text = "ðŸ”„ Refresh Plants & Pets"
    refreshBtn.TextColor3 = Color3.new(1, 1, 1)
    refreshBtn.TextScaled = true
    refreshBtn.Font = Enum.Font.SourceSans
    refreshBtn.LayoutOrder = 1
    refreshBtn.Parent = contentFrame

    local refreshCorner = Instance.new("UICorner")
    refreshCorner.CornerRadius = UDim.new(0, 8)
    refreshCorner.Parent = refreshBtn

    return screenGui, mainFrame, iconFrame, contentFrame, refreshBtn, minimizeBtn
end

-- Plant Detection
local function findAllPlants()
    allPlants = {}
    
    -- Search workspace for plants (adjust based on your game structure)
    for _, obj in pairs(workspace:GetChildren()) do
        if obj.Name:find("Plant") or obj.Name:find("Crop") or obj.Name:find("Tree") then
            if obj:IsA("Model") and obj.PrimaryPart then
                table.insert(allPlants, obj)
            end
        end
    end
    
    -- Alternative: Search in specific folders
    if workspace:FindFirstChild("Plants") then
        for _, plant in pairs(workspace.Plants:GetChildren()) do
            if plant:IsA("Model") and plant.PrimaryPart then
                table.insert(allPlants, plant)
            end
        end
    end
    
    print("Found", #allPlants, "plants")
end

-- Pet Detection
local function findAllPets()
    allPets = {}
    
    -- Find player's pets
    for _, obj in pairs(workspace:GetChildren()) do
        if obj.Name:find(player.Name .. "_Pet") or 
           (obj:FindFirstChild("Owner") and obj.Owner.Value == player) then
            if obj:IsA("Model") and obj.PrimaryPart then
                table.insert(allPets, obj)
            end
        end
    end
    
    -- Alternative: Check character
    if player.Character then
        for _, obj in pairs(player.Character:GetChildren()) do
            if obj:IsA("Model") and obj.Name:find("Pet") and obj.PrimaryPart then
                table.insert(allPets, obj)
            end
        end
    end
    
    print("Found", #allPets, "pets")
end

-- Create Plant Selection UI
local function createPlantCard(plant, contentFrame)
    local cardFrame = Instance.new("Frame")
    cardFrame.Name = "PlantCard_" .. plant.Name
    cardFrame.Size = UDim2.new(1, 0, 0, 120)
    cardFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    cardFrame.BorderSizePixel = 0
    cardFrame.LayoutOrder = 2
    cardFrame.Parent = contentFrame

    local cardCorner = Instance.new("UICorner")
    cardCorner.CornerRadius = UDim.new(0, 8)
    cardCorner.Parent = cardFrame

    -- Plant Info
    local plantName = Instance.new("TextLabel")
    plantName.Size = UDim2.new(0.6, 0, 0, 25)
    plantName.Position = UDim2.new(0, 10, 0, 5)
    plantName.BackgroundTransparency = 1
    plantName.Text = plant.Name
    plantName.TextColor3 = Color3.new(1, 1, 1)
    plantName.TextScaled = true
    plantName.Font = Enum.Font.SourceSansBold
    plantName.TextXAlignment = Enum.TextXAlignment.Left
    plantName.Parent = cardFrame

    -- Assigned Pets Count
    local petCount = Instance.new("TextLabel")
    petCount.Name = "PetCount"
    petCount.Size = UDim2.new(0.35, 0, 0, 20)
    petCount.Position = UDim2.new(0.6, 0, 0, 5)
    petCount.BackgroundTransparency = 1
    petCount.Text = "Pets: 0"
    petCount.TextColor3 = Color3.fromRGB(150, 150, 150)
    petCount.TextScaled = true
    petCount.Font = Enum.Font.SourceSans
    petCount.TextXAlignment = Enum.TextXAlignment.Right
    petCount.Parent = cardFrame

    -- Pet Selection Area
    local petArea = Instance.new("ScrollingFrame")
    petArea.Name = "PetArea"
    petArea.Size = UDim2.new(1, -20, 0, 60)
    petArea.Position = UDim2.new(0, 10, 0, 30)
    petArea.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    petArea.BorderSizePixel = 0
    petArea.ScrollBarThickness = 4
    petArea.ScrollingDirection = Enum.ScrollingDirection.X
    petArea.CanvasSize = UDim2.new(0, 0, 1, 0)
    petArea.Parent = cardFrame

    local petAreaCorner = Instance.new("UICorner")
    petAreaCorner.CornerRadius = UDim.new(0, 4)
    petAreaCorner.Parent = petArea

    local petLayout = Instance.new("UIListLayout")
    petLayout.FillDirection = Enum.FillDirection.Horizontal
    petLayout.SortOrder = Enum.SortOrder.LayoutOrder
    petLayout.Padding = UDim.new(0, 5)
    petLayout.Parent = petArea

    -- Add Pet Buttons
    local totalWidth = 0
    for i, pet in ipairs(allPets) do
        local petBtn = Instance.new("TextButton")
        petBtn.Name = "Pet_" .. pet.Name
        petBtn.Size = UDim2.new(0, 80, 1, -10)
        petBtn.Position = UDim2.new(0, 0, 0, 5)
        petBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
        petBtn.BorderSizePixel = 0
        petBtn.Text = pet.Name:gsub(player.Name .. "_", "")
        petBtn.TextColor3 = Color3.new(1, 1, 1)
        petBtn.TextScaled = true
        petBtn.Font = Enum.Font.SourceSans
        petBtn.LayoutOrder = i
        petBtn.Parent = petArea

        local petBtnCorner = Instance.new("UICorner")
        petBtnCorner.CornerRadius = UDim.new(0, 4)
        petBtnCorner.Parent = petBtn

        totalWidth = totalWidth + 85

        -- Toggle pet assignment
        petBtn.MouseButton1Click:Connect(function()
            if not plantAssignments[plant] then
                plantAssignments[plant] = {pets = {}, position = plant.PrimaryPart.Position}
            end

            local petList = plantAssignments[plant].pets
            local petIndex = table.find(petList, pet)

            if petIndex then
                -- Remove pet
                table.remove(petList, petIndex)
                petBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
                print("Removed", pet.Name, "from", plant.Name)
            else
                -- Add pet
                table.insert(petList, pet)
                petBtn.BackgroundColor3 = Color3.fromRGB(34, 139, 34)
                print("Assigned", pet.Name, "to", plant.Name)
            end

            -- Update pet count
            petCount.Text = "Pets: " .. #petList
        end)
    end

    -- Update canvas size
    petArea.CanvasSize = UDim2.new(0, totalWidth, 1, 0)

    -- Control Buttons
    local controlFrame = Instance.new("Frame")
    controlFrame.Size = UDim2.new(1, -20, 0, 25)
    controlFrame.Position = UDim2.new(0, 10, 1, -30)
    controlFrame.BackgroundTransparency = 1
    controlFrame.Parent = cardFrame

    local clearBtn = Instance.new("TextButton")
    clearBtn.Size = UDim2.new(0, 60, 1, 0)
    clearBtn.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
    clearBtn.BorderSizePixel = 0
    clearBtn.Text = "Clear"
    clearBtn.TextColor3 = Color3.new(1, 1, 1)
    clearBtn.TextScaled = true
    clearBtn.Font = Enum.Font.SourceSans
    clearBtn.Parent = controlFrame

    local clearCorner = Instance.new("UICorner")
    clearCorner.CornerRadius = UDim.new(0, 4)
    clearCorner.Parent = clearBtn

    clearBtn.MouseButton1Click:Connect(function()
        plantAssignments[plant] = {pets = {}, position = plant.PrimaryPart.Position}
        petCount.Text = "Pets: 0"
        -- Reset all pet button colors
        for _, petBtn in pairs(petArea:GetChildren()) do
            if petBtn:IsA("TextButton") then
                petBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
            end
        end
    end)
end

-- Pet Management System
local function managePetPositions(deltaTime)
    lastUpdate = lastUpdate + deltaTime
    
    if lastUpdate >= UPDATE_INTERVAL then
        lastUpdate = 0
        
        for plant, data in pairs(plantAssignments) do
            if plant.Parent and plant.PrimaryPart then
                local plantPos = plant.PrimaryPart.Position
                data.position = plantPos
                
                for i, pet in ipairs(data.pets) do
                    if pet.Parent and pet.PrimaryPart then
                        local targetPos = plantPos + Vector3.new(
                            math.cos(i * (math.pi * 2) / #data.pets) * PET_DISTANCE,
                            2,
                            math.sin(i * (math.pi * 2) / #data.pets) * PET_DISTANCE
                        )
                        
                        local currentPos = pet.PrimaryPart.Position
                        local distance = (targetPos - currentPos).Magnitude
                        
                        if distance > 3 then
                            -- Smooth movement to position
                            local direction = (targetPos - currentPos).Unit
                            local moveSpeed = math.min(distance * 0.1, 2)
                            
                            local bodyVelocity = pet.PrimaryPart:FindFirstChild("BodyVelocity")
                            if not bodyVelocity then
                                bodyVelocity = Instance.new("BodyVelocity")
                                bodyVelocity.MaxForce = Vector3.new(4000, 0, 4000)
                                bodyVelocity.Parent = pet.PrimaryPart
                            end
                            
                            bodyVelocity.Velocity = direction * moveSpeed
                            
                            -- Remove velocity when close
                            spawn(function()
                                wait(0.5)
                                if bodyVelocity.Parent then
                                    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                                end
                            end)
                        end
                    end
                end
            end
        end
    end
end

-- Main System
local function initializeSystem()
    local screenGui, mainFrame, iconFrame, contentFrame, refreshBtn, minimizeBtn = createMainGUI()
    
    -- Minimize/Maximize functionality
    local function minimizeMenu()
        local tween = TweenService:Create(
            mainFrame,
            TweenInfo.new(ANIMATION_TIME, Enum.EasingStyle.Quad),
            {Size = UDim2.new(0, 0, 0, 0)}
        )
        tween:Play()
        tween.Completed:Connect(function()
            mainFrame.Visible = false
            iconFrame.Visible = true
        end)
    end
    
    local function maximizeMenu()
        mainFrame.Visible = true
        mainFrame.Size = UDim2.new(0, 0, 0, 0)
        iconFrame.Visible = false
        local tween = TweenService:Create(
            mainFrame,
            TweenInfo.new(ANIMATION_TIME, Enum.EasingStyle.Quad),
            {Size = UDim2.new(0, 400, 0, 500)}
        )
        tween:Play()
    end
    
    minimizeBtn.MouseButton1Click:Connect(minimizeMenu)
    iconFrame.MouseButton1Click:Connect(maximizeMenu)
    
    -- Refresh functionality
    local function refreshContent()
        findAllPlants()
        findAllPets()
        
        -- Clear existing plant cards
        for _, child in pairs(contentFrame:GetChildren()) do
            if child.Name:find("PlantCard_") then
                child:Destroy()
            end
        end
        
        -- Create new plant cards
        for _, plant in ipairs(allPlants) do
            createPlantCard(plant, contentFrame)
        end
        
        -- Update canvas size
        contentFrame.CanvasSize = UDim2.new(0, 0, 0, #allPlants * 130 + 100)
    end
    
    refreshBtn.MouseButton1Click:Connect(refreshContent)
    
    -- Keyboard shortcut (P key to toggle)
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Enum.KeyCode.P then
            if mainFrame.Visible then
                minimizeMenu()
            else
                maximizeMenu()
            end
        end
    end)
    
    -- Start pet management
    RunService.Heartbeat:Connect(managePetPositions)
    
    -- Initial refresh
    refreshContent()
    
    print("Pet Plant Manager initialized! Press P to toggle or use the minimize button.")
end

-- Start the system
initializeSystem()
