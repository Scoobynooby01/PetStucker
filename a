-- All-in-One Pet Plant Manager (LocalScript)
-- Paste into StarterPlayerScripts or load via loadstring

local Players          = game:GetService("Players")
local RunService       = game:GetService("RunService")
local Workspace        = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
if not player then return end

-- CONFIG
local PET_FOLDER_PATH    = { "PetsPhysical" }  -- workspace folders to search for pets
local HS_PATH            = { "Farm","Farm","Important","Plants_Physical","Honeysuckle" }
local RADIUS             = 8                   -- pet circle radius
local HEIGHT_OFFSET      = 2                   -- pet height above plant
local HEARTBEAT_INTERVAL = 0.1                 -- seconds between moves

-- STATE
local honeysucklePos = nil
local pets            = {}    -- { model=Model, root=BasePart }
local sticking        = false
local timeAcc         = 0

-- GUI
local gui = Instance.new("ScreenGui")
gui.Name            = "PetPlantManagerGUI"
gui.ResetOnSpawn    = false
gui.Parent          = player:WaitForChild("PlayerGui")

-- Minimized Icon
local icon = Instance.new("TextButton", gui)
icon.Name              = "MinimizeIcon"
icon.Size              = UDim2.new(0, 30, 0, 30)
icon.Position          = UDim2.new(0, 10, 0.5, -15)
icon.Text              = "🌱"
icon.Font              = Enum.Font.GothamBold
icon.TextSize          = 20
icon.TextColor3        = Color3.new(1,1,1)
icon.BackgroundColor3  = Color3.fromRGB(45,45,45)
icon.Visible           = false

-- Main Window
local win = Instance.new("Frame", gui)
win.Name               = "MainWindow"
win.Size               = UDim2.new(0, 300, 0, 360)
win.Position           = UDim2.new(0, 20, 0.5, -180)
win.BackgroundColor3   = Color3.fromRGB(45,45,45)
win.BorderSizePixel    = 0
win.Active             = true
win.Draggable          = true

local layout = Instance.new("UIListLayout", win)
layout.SortOrder       = Enum.SortOrder.LayoutOrder
layout.Padding         = UDim.new(0, 6)

-- Header
local header = Instance.new("Frame", win)
header.Size            = UDim2.new(1, 0, 0, 30)
header.BackgroundColor3= Color3.fromRGB(25,25,25)

local title = Instance.new("TextLabel", header)
title.Size             = UDim2.new(1, -30, 1, 0)
title.Position         = UDim2.new(0, 5, 0, 0)
title.BackgroundTransparency = 1
title.Text             = "Pet Plant Manager"
title.TextColor3       = Color3.new(1,1,1)
title.Font             = Enum.Font.GothamBold
title.TextSize         = 18
title.TextXAlignment   = Enum.TextXAlignment.Left

local btnMin = Instance.new("TextButton", header)
btnMin.Size             = UDim2.new(0, 25, 0, 25)
btnMin.Position         = UDim2.new(1, -30, 0, 2)
btnMin.Text             = "—"
btnMin.Font             = Enum.Font.Gotham
btnMin.TextSize         = 18
btnMin.TextColor3       = Color3.new(1,1,1)
btnMin.BackgroundColor3 = Color3.fromRGB(70,70,70)

btnMin.MouseButton1Click:Connect(function()
    win.Visible = false
    icon.Visible = true
end)
icon.MouseButton1Click:Connect(function()
    win.Visible = true
    icon.Visible = false
end)

-- Scan Button
local btnScan = Instance.new("TextButton", win)
btnScan.Size            = UDim2.new(1, 0, 0, 40)
btnScan.BackgroundColor3= Color3.fromRGB(34,139,34)
btnScan.Text            = "🔍 Scan Workspace"
btnScan.Font            = Enum.Font.GothamBold
btnScan.TextSize        = 18
btnScan.TextColor3      = Color3.new(1,1,1)

-- Toggle Button
local btnToggle = Instance.new("TextButton", win)
btnToggle.Size          = UDim2.new(1, 0, 0, 40)
btnToggle.BackgroundColor3 = Color3.fromRGB(220,53,69)
btnToggle.Text          = "▶️ Start Sticking"
btnToggle.Font          = Enum.Font.GothamBold
btnToggle.TextSize      = 18
btnToggle.TextColor3    = Color3.new(1,1,1)

-- Status Label
local lblStatus = Instance.new("TextLabel", win)
lblStatus.Size          = UDim2.new(1, 0, 0, 60)
lblStatus.BackgroundColor3 = Color3.fromRGB(60,60,60)
lblStatus.TextColor3    = Color3.new(1,1,1)
lblStatus.TextWrapped   = true
lblStatus.TextYAlignment= Enum.TextYAlignment.Top
lblStatus.Font          = Enum.Font.Gotham
lblStatus.TextSize      = 16
lblStatus.Text          = "Status: Idle"

-- HELPERS

-- resolve nested child by path
local function getPath(root, path)
    local cur = root
    for _, name in ipairs(path) do
        if not cur then return nil end
        cur = cur:FindFirstChild(name)
    end
    return cur
end

-- scan honeysuckle
local function scanHoneysuckle()
    local hs = getPath(Workspace, HS_PATH)
    if hs then
        honeysucklePos = hs:GetPivot().Position
        return true
    end
    honeysucklePos = nil
    return false
end

-- scan pets
local function scanPets()
    pets = {}
    -- search configured folders
    for _, folderName in ipairs(PET_FOLDER_PATH) do
        local folder = Workspace:FindFirstChild(folderName)
        if folder and folder:IsA("Instance") then
            for _, mdl in ipairs(folder:GetChildren()) do
                if mdl:IsA("Model") then
                    local root = mdl.PrimaryPart
                              or mdl:FindFirstChild("RootPart_PetMover_WELD", true)
                              or mdl:FindFirstChildWhichIsA("BasePart")
                    if root then
                        mdl.PrimaryPart = root
                        table.insert(pets, { model = mdl, root = root })
                    end
                end
            end
        end
    end
    return #pets
end

-- update status text
local function updateStatus()
    lblStatus.Text = string.format(
        "Honeysuckle: %s\nPets found: %d\nSticking: %s",
        honeysucklePos and "✓" or "✗",
        #pets,
        sticking and "ON" or "OFF"
    )
end

-- move pets in circle
local function movePets()
    if not honeysucklePos or #pets == 0 then return end
    for i, pd in ipairs(pets) do
        local ang = (i-1) * (2*math.pi / #pets)
        local target = Vector3.new(
            honeysucklePos.X + math.cos(ang)*RADIUS,
            honeysucklePos.Y + HEIGHT_OFFSET,
            honeysucklePos.Z + math.sin(ang)*RADIUS
        )
        pd.model:SetPrimaryPartCFrame(CFrame.new(target))
    end
end

-- EVENTS

btnScan.MouseButton1Click:Connect(function()
    scanHoneysuckle()
    scanPets()
    updateStatus()
end)

btnToggle.MouseButton1Click:Connect(function()
    if not honeysucklePos or #pets == 0 then
        lblStatus.Text = "⛔ Please scan first!"
        return
    end
    sticking = not sticking
    if sticking then
        btnToggle.Text = "⏹️ Stop Sticking"
        btnToggle.BackgroundColor3 = Color3.fromRGB(34,139,34)
    else
        btnToggle.Text = "▶️ Start Sticking"
        btnToggle.BackgroundColor3 = Color3.fromRGB(220,53,69)
    end
    updateStatus()
end)

UserInputService.InputBegan:Connect(function(inp, gp)
    if gp then return end
    if inp.KeyCode == Enum.KeyCode.H then
        win.Visible  = not win.Visible
        icon.Visible = not icon.Visible
    end
end)

-- HEARTBEAT LOOP
RunService.Heartbeat:Connect(function(dt)
    if sticking then
        timeAcc = timeAcc + dt
        if timeAcc >= HEARTBEAT_INTERVAL then
            timeAcc = 0
            movePets()
        end
    end
end)

-- INITIALIZE
scanHoneysuckle()
scanPets()
updateStatus()
